{
    "generator": [
        {
            "prompt_states": {
                "type": "Prompt",
                "data": {
                    "_components": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "_parameters": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "training": false,
                    "_init_args": {
                        "template": null,
                        "prompt_kwargs": {}
                    },
                    "template": "Given a job description, list all of the perceived and real problems and obstacles that the job poster could or is currently facing.\n---\nFollow the following format.\nJob Description: ${job_description}\nProblems: ${problems}. \nRespond with a single JSON object. JSON Schema: {{output_format_str}}\n---\nJob Description: {{job_description}}\nProblems:",
                    "prompt_variables": [
                        "output_format_str",
                        "job_description"
                    ],
                    "prompt_kwargs": {
                        "output_format_str": "Your output should be formatted as a standard JSON instance with the following schema:\n```\n{\n    \"problems\": \"list of problems (List[{'type': 'Problem', 'properties': {'id': {'type': 'int', 'desc': 'unique identifier for the problem'}, 'problem': {'type': 'str', 'desc': 'description of the problem'}}, 'required': ['id', 'problem']}]) (required)\"\n}\n```\n-Make sure to always enclose the JSON output in triple backticks (```). Please do not add anything other than valid JSON output!\n-Use double quotes for the keys and string values.\n-Follow the JSON formatting conventions."
                    }
                }
            },
            "time_stamp": "2024-07-05T19:56:39.212790"
        },
        {
            "prompt_states": {
                "type": "Prompt",
                "data": {
                    "_components": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "_parameters": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "training": false,
                    "_init_args": {
                        "template": null,
                        "prompt_kwargs": {}
                    },
                    "template": "Given a job description, list all of the perceived and real problems and obstacles that the job poster could or is currently facing.\n---\nFollow the following format.\nJob Description: ${job_description}\nProblems: ${problems}. \nRespond with a single JSON object. JSON Schema: {{output_format_str}}\n---\nJob Description: {{job_description}}\nProblems:",
                    "prompt_variables": [
                        "job_description",
                        "output_format_str"
                    ],
                    "prompt_kwargs": {
                        "output_format_str": "Your output should be formatted as a standard JSON instance with the following schema:\n```\n{\n    \"problems\": \"list of problems (List[{'type': 'Problem', 'properties': {'id': {'type': 'int', 'desc': 'unique identifier for the problem'}, 'problem': {'type': 'str', 'desc': 'description of the problem'}}, 'required': ['id', 'problem']}]) (required)\"\n}\n```\n-Make sure to always enclose the JSON output in triple backticks (```). Please do not add anything other than valid JSON output!\n-Use double quotes for the keys and string values.\n-Follow the JSON formatting conventions."
                    }
                }
            },
            "time_stamp": "2024-07-05T19:59:27.654898"
        },
        {
            "prompt_states": {
                "type": "Prompt",
                "data": {
                    "_components": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "_parameters": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "training": false,
                    "_init_args": {
                        "template": null,
                        "prompt_kwargs": {}
                    },
                    "template": "\nBreak down this problem/obstacle into very intricate steps that the job poster would have to do/take in order to be successful.\n---\nFollow the following format.\nProblem: ${problem}\nSub-problems: ${sub_problems}. Respond with a single JSON object. JSON Schema: {{output_format_str}}\n---\nProblem: {{problem}}\nSub-problems:\n",
                    "prompt_variables": [
                        "problem",
                        "output_format_str"
                    ],
                    "prompt_kwargs": {
                        "output_format_str": "{\n    \"sub_problems\": \"list of sub-problems (List[{'type': 'SubProblem', 'properties': {'id': {'type': 'int', 'desc': 'unique identifier for the sub-problem'}, 'sub_problem': {'type': 'str', 'desc': 'description of the sub-problem'}}, 'required': ['id', 'sub_problem']}]) (required)\"\n}"
                    }
                }
            },
            "time_stamp": "2024-07-05T19:59:27.693382"
        },
        {
            "prompt_states": {
                "type": "Prompt",
                "data": {
                    "_components": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "_parameters": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "training": false,
                    "_init_args": {
                        "template": null,
                        "prompt_kwargs": {}
                    },
                    "template": "\nGiven this problem and sub-problems, generate a list of all possible objections that the customer may have for why they think they couldn't solve that problem.\n---\nFollow the following format.\nProblem and Sub-problems: ${problem_and_sub_problems}\nObjections: ${objections}. Respond with a single JSON object. JSON Schema: {{output_format_str}}\n---\nProblem and Sub-problems:\nProblem: {{problem}}\nSub-problems: {{sub_problems}}\nObjections:\n",
                    "prompt_variables": [
                        "sub_problems",
                        "problem",
                        "output_format_str"
                    ],
                    "prompt_kwargs": {
                        "output_format_str": "{\n    \"objections\": \"list of objections (List[{'type': 'Objection', 'properties': {'id': {'type': 'int', 'desc': 'unique identifier for the objection'}, 'objection': {'type': 'str', 'desc': 'description of the objection'}}, 'required': ['id', 'objection']}]) (required)\"\n}"
                    }
                }
            },
            "time_stamp": "2024-07-05T19:59:27.732078"
        },
        {
            "prompt_states": {
                "type": "Prompt",
                "data": {
                    "_components": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "_parameters": {
                        "_ordered_dict": true,
                        "data": []
                    },
                    "training": false,
                    "_init_args": {
                        "template": null,
                        "prompt_kwargs": {}
                    },
                    "template": "\nGiven this problem, sub-problems, and objections, generate single sentences on how a single person service provider would deliver one-on-one solutions. Generate solutions for the following delivery methods: done with you, done for you, and done by you solutions for the given objections. Generate 5 solutions for each method.\n---\nFollow the following format.\nProblem, Sub-problems, and Objections: ${problem_sub_problems_objections}\nSolutions: ${solutions}. Respond with a single JSON object. JSON Schema: {{output_format_str}}\n---\nProblem, Sub-problems, and Objections:\nProblem: {{problem}}\nSub-problems: {{sub_problems}}\nObjections: {{objections}}\nSolutions:\n",
                    "prompt_variables": [
                        "sub_problems",
                        "problem",
                        "objections",
                        "output_format_str"
                    ],
                    "prompt_kwargs": {
                        "output_format_str": "{\n    \"done_with_you_solutions\": \"list of done-with-you solutions (List[str]) (optional)\",\n    \"done_for_you_solutions\": \"list of done-for-you solutions (List[str]) (optional)\",\n    \"do_it_yourself_solutions\": \"list of do-it-yourself solutions (List[str]) (optional)\"\n}"
                    }
                }
            },
            "time_stamp": "2024-07-05T19:59:27.769944"
        }
    ]
}